server:
  port: 80
spring:
  application:
    name: springcloud-gateway
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true  # 开启从注册中心动态创建路由的功能，利用微服务名进行路由
      routes:
        - id: uac   # 路由的ID，没有固定规则，但要求唯一，建议配合服务名
          uri: http://localhost:8011/   #这里的名字必须和被访问的项目配置文件 的项目名一致 spring.application.name
          predicates:
            - Path=/api/consumer/**  #访问 /api/thirdparty 这个路径就路由到
#          filters:                    #路径重写 成一下 这里中间逗号， 前面是截取的路径，后面是替换的路径
#            - RewritePath=/api/(?<segment>.*),/$\{segment}
#        - id: springcloud-provider-uac   #随便取
#          uri: lb://springcloud-provider-uac   #这里的名字必须和被访问的项目配置文件 的项目名一致 spring.application.name
#          predicates:
#            - Path=/api/dept/**  #访问 /api/thirdparty 这个路径就路由到
#          filters:                    #路径重写 成一下 这里中间逗号， 前面是截取的路径，后面是替换的路径
#            #也就是你看以为你实际访问是 /api/thirdparty/oss/policy，实际上它是吧 /api//api/thirdparty这一段给丢了，只要只要oss/policy
#            #
#            - RewritePath=/api/(?<segment>.*),/$\{segment}

#Eureka的配置
eureka:
  client:
    service-url:
      defaultZone: http://eureka7001.com:7001/eureka/
  instance:
    instance-id: springcloud-gateway-80  #修改eureka上默认描述信息
    prefer-ip-address: true


info:
  app.name: springcloud-demo
  company.name: blog.springcloud.com